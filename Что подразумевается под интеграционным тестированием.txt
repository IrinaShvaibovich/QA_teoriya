Integration and Testing, аббревиатура англ. I&T) — одна из фаз тестирования программного обеспечения,
 при которой отдельные программные модули объединяются и тестируются в группе. Обычно интеграционное 
тестирование проводится после модульного тестирования и предшествует системному тестированию.

Модульное тестирование (Unit Testing) - это тип тестирования программного обеспечения,
 при котором тестируются отдельные модули или компоненты программного обеспечения. Его цель заключается 
в том, чтобы проверить, что каждая единица программного кода работает должным образом. Данный вид
 тестирование выполняется разработчиками на этапе кодирования приложения. Модульные тесты изолируют
 часть кода и проверяют его работоспособность. Единицей для измерения может служить отдельная функция,
 метод, процедура, модуль или объект.

Системное тестирование – это тестирование программного обеспечения выполняемое на полной,
 интегрированной системе, с целью проверки соответствия системы исходным требованиям, как
 функциональным, так и не функциональным.
Выполняя системное тестирование, можно обнаружить следующие типы дефектов:
•  Неправильное использование системных ресурсов.
•  Непредусмотренные комбинации пользовательских данных.
•  Проблемы с совместимостью окружения.
•  Непредусмотренные сценарии использования.
•  Несоответствие с функциональными требованиями.
•  Плохое удобство использования.

Системное тестирование выполняется методом «Черного ящика», т.к. проверяемое множество является 
«внешними» сущностями, которые не требуют взаимодействия с внутренним устройством программы. Также 
выполнять его рекомендуется в окружении, максимально приближенном к окружению конечного пользователя.

Можно выделить 2 подхода к системному тестированию:
•  На базе требований. Тестирование проводится в соответствии с функциональными или нефункциональными 
требованиями, для каждого из которых пишется testcase (тестовые прецеденты).
•  На базе случаев использования. Тестирование происходит в соответствии с вариантами использования продукта, 
на основе которых создаются usercases (пользовательские прецеденты). Для каждого из данных пользовательских 
прецедентов создаются свои тестовые прецеденты.

